
package nomina.Formularios;

import com.sun.rowset.internal.Row;
import java.awt.Button;
import java.awt.event.KeyEvent;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.util.ArrayList;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import nomina.Clases.ClsCargos;
import nomina.Clases.ClsConexionDatos;
import java.util.GregorianCalendar;
import nomina.Clases.ClsArchivoTxt;
import nomina.Clases.ClsCalculos;
import nomina.Clases.ClsEmpleados;
import nomina.Clases.ClsImpresora;
import nomina.Clases.ClsLiquidacionNomina;


/**
 *
 * @author  Wilson  Otalvaro Bedoya
 *          Victor Higuita 
 *          Juliana Toro
 */
public class FrmImpresionTxt extends javax.swing.JInternalFrame {

    ClsImpresora P;
    ClsConexionDatos datos = new ClsConexionDatos();
    ClsCargos cargos = new ClsCargos();
    ResultSet rs;
    ClsCargos c;
    int fila=0;
    int Fila = 1;
    int Max = 1;
    
    public FrmImpresionTxt() {
        initComponents();
        this.setSize(1345, 650);
        this.setVisible(true);
        TxtRutaArchivo.setEnabled(true);
        TxtRutaArchivo.setVisible(true);
        CBoxPeriodoImp.setEnabled(true);        
        CBoxPeriodoImp.removeAllItems();
        CBoxPeriodoImp.setVisible(true);     
        CBoxPeriodoImp.setEnabled(true);
        
        for (int i=0;i<25;i++){
                CBoxPeriodoImp.addItem(i);
        }
        
        inhabilitar();       
        
        Fila = 1;
        ExtraerDatos(Fila);
    }
                  
    public void inhabilitar(){
    
    
    }
    

    public void habilitar(){
    
    
    }
    private void limpiar(){
    
        
    }
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        BtnSalir = new javax.swing.JButton();
        TxtRutaArchivo = new javax.swing.JTextField();
        BtnGenerartxt = new javax.swing.JButton();
        BtnImpirmir = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        CBoxPeriodoImp = new javax.swing.JComboBox();
        jLabel2 = new javax.swing.JLabel();

        setClosable(true);
        setDefaultCloseOperation(javax.swing.WindowConstants.HIDE_ON_CLOSE);
        setIconifiable(true);
        setMaximizable(true);
        setResizable(true);
        setTitle("Imprimir o Archivo Plano");
        addInternalFrameListener(new javax.swing.event.InternalFrameListener() {
            public void internalFrameActivated(javax.swing.event.InternalFrameEvent evt) {
            }
            public void internalFrameClosed(javax.swing.event.InternalFrameEvent evt) {
                formInternalFrameClosed(evt);
            }
            public void internalFrameClosing(javax.swing.event.InternalFrameEvent evt) {
            }
            public void internalFrameDeactivated(javax.swing.event.InternalFrameEvent evt) {
            }
            public void internalFrameDeiconified(javax.swing.event.InternalFrameEvent evt) {
            }
            public void internalFrameIconified(javax.swing.event.InternalFrameEvent evt) {
            }
            public void internalFrameOpened(javax.swing.event.InternalFrameEvent evt) {
            }
        });
        getContentPane().setLayout(null);

        BtnSalir.setIcon(new javax.swing.ImageIcon(getClass().getResource("/nomina/Iconos/Salir.jpg"))); // NOI18N
        BtnSalir.setText("Salir");
        BtnSalir.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        BtnSalir.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        BtnSalir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BtnSalirActionPerformed(evt);
            }
        });
        getContentPane().add(BtnSalir);
        BtnSalir.setBounds(660, 20, 90, 60);
        getContentPane().add(TxtRutaArchivo);
        TxtRutaArchivo.setBounds(240, 60, 250, 20);

        BtnGenerartxt.setIcon(new javax.swing.ImageIcon(getClass().getResource("/nomina/Iconos/05.jpg"))); // NOI18N
        BtnGenerartxt.setText("Generar txt");
        BtnGenerartxt.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        BtnGenerartxt.setVerticalAlignment(javax.swing.SwingConstants.BOTTOM);
        BtnGenerartxt.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        BtnGenerartxt.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BtnGenerartxtActionPerformed(evt);
            }
        });
        getContentPane().add(BtnGenerartxt);
        BtnGenerartxt.setBounds(540, 100, 90, 60);

        BtnImpirmir.setIcon(new javax.swing.ImageIcon(getClass().getResource("/nomina/Iconos/impresora.gif"))); // NOI18N
        BtnImpirmir.setText("Imprimir");
        BtnImpirmir.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        BtnImpirmir.setVerticalAlignment(javax.swing.SwingConstants.BOTTOM);
        BtnImpirmir.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        BtnImpirmir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BtnImpirmirActionPerformed(evt);
            }
        });
        getContentPane().add(BtnImpirmir);
        BtnImpirmir.setBounds(540, 20, 90, 60);

        jLabel1.setFont(new java.awt.Font("Arial", 0, 12)); // NOI18N
        jLabel1.setText("Nombre Archivo");
        getContentPane().add(jLabel1);
        jLabel1.setBounds(150, 60, 90, 20);

        CBoxPeriodoImp.setToolTipText("");
        CBoxPeriodoImp.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                CBoxPeriodoImpItemStateChanged(evt);
            }
        });
        CBoxPeriodoImp.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                CBoxPeriodoImpActionPerformed(evt);
            }
        });
        getContentPane().add(CBoxPeriodoImp);
        CBoxPeriodoImp.setBounds(240, 30, 140, 20);

        jLabel2.setFont(new java.awt.Font("Arial", 0, 12)); // NOI18N
        jLabel2.setText("Periodo");
        getContentPane().add(jLabel2);
        jLabel2.setBounds(190, 30, 50, 20);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void BtnSalirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BtnSalirActionPerformed
        // TODO add your handling code here:
        setVisible(false);
        
    }//GEN-LAST:event_BtnSalirActionPerformed

    private void formInternalFrameClosed(javax.swing.event.InternalFrameEvent evt) {//GEN-FIRST:event_formInternalFrameClosed
        // TODO add your handling code here:
        
    }//GEN-LAST:event_formInternalFrameClosed

    private void BtnGenerartxtActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BtnGenerartxtActionPerformed
        int Max = ClsConexionDatos.NumeroFilas();
        String Periodo = "0";
        String Nombre = TxtRutaArchivo.getText();
        try{
            if (Nombre.length() != 0 && (Nombre.charAt(0) == 'C' || Nombre.charAt(0) == 'D' || Nombre.charAt(0) == 'E' 
                    || Nombre.charAt(0) == 'F') && Nombre.charAt(1) == ':' && Nombre.charAt(2) == '\\'){

                if (CBoxPeriodoImp.getSelectedItem().toString().compareTo("0") != 0){
                    Periodo = CBoxPeriodoImp.getSelectedItem().toString();
                    ClsEmpleados[] Empleado = new ClsEmpleados[1];
                    ClsLiquidacionNomina[] Nomina = new ClsLiquidacionNomina[1];
                    ClsArchivoTxt Archivo = new ClsArchivoTxt();        
                    double AporteSalud = 0, AportePension = 0, Prestamos = 0, AuxTransporte = 0, SalarioNeto = 0, 
                           SalarioBruto = 0, Bonificaciones = 0, HorasExtD = 0, HorasExtN = 0, SalarioBasico = 0;

                    for (int i=1;i<=Max;i++){
                        try {
                                Nomina = ClsConexionDatos.ImprimirNomina(i, Periodo);
                                Empleado = ClsConexionDatos.buscar(Nomina[0].getCedula());
                                SalarioBruto = Nomina[0].getSalarioBruto();
                                AporteSalud = Nomina[0].getAporteSalud();
                                AportePension = Nomina[0].getAportePension();
                                HorasExtD = Nomina[0].getValorExtrasDiurnas();
                                HorasExtN = Nomina[0].getValorExtrasNocturnas();
                                SalarioBasico = Nomina[0].getSalarioBasico();
                                SalarioNeto = Nomina[0].getSalarioNeto();
                                if (!"".equals(Empleado[0].getCedula())){
                                    Archivo.ImprimirArchivo(Empleado[0], AporteSalud, AportePension, Prestamos, AuxTransporte, SalarioNeto, SalarioBasico, SalarioBruto, Bonificaciones, HorasExtD, HorasExtN, Nombre, Periodo);
                                }else{
                                    System.out.println("No hay datos para imprimir...");
                                }                                
                        }catch(Exception ee) {
                            System.out.println("Error al Calcular una nomina...");
                        }            
                    }                
                }else{
                    JOptionPane.showMessageDialog(rootPane, "Debe Seleccionar un Periodo");
                    return;
                }
            }
        }catch(Exception ee){
            JOptionPane.showMessageDialog(rootPane, "Ingrese un nombre valido para el Archivo, ejmeplo: D:\\Nombre.txt");
            return;
        }        
        
        
    }//GEN-LAST:event_BtnGenerartxtActionPerformed

    private void BtnImpirmirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BtnImpirmirActionPerformed
        int Max = ClsConexionDatos.NominaFilas(); 
        String Periodo = "0";
        ClsEmpleados[] Empleado = new ClsEmpleados[1];
        ClsLiquidacionNomina[] Nomina = new ClsLiquidacionNomina[1];
        GregorianCalendar Fecha = new GregorianCalendar();
        if (CBoxPeriodoImp.getSelectedItem().toString().compareTo("0") != 0){
                Periodo = CBoxPeriodoImp.getSelectedItem().toString();
            double AporteSalud = 0, AportePension = 0, Prestamos = 0, AuxTransporte = 0, SalarioNeto = 0, 
                   SalarioBruto = 0, Bonificaciones = 0, HorasExtD = 0, HorasExtN = 0, SalarioBasico = 0;

            for (int i=1;i<=Max;i++){

                try {
                    Nomina = ClsConexionDatos.ImprimirNomina(i, Periodo);
                    Empleado = ClsConexionDatos.buscar(Nomina[0].getCedula());
                    SalarioBruto = Nomina[0].getSalarioBruto();
                    AporteSalud = Nomina[0].getAporteSalud();
                    AportePension = Nomina[0].getAportePension();
                    HorasExtD = Nomina[0].getValorExtrasDiurnas();
                    HorasExtN = Nomina[0].getValorExtrasNocturnas();
                    SalarioBasico = Nomina[0].getSalarioBasico();
                    SalarioNeto = Nomina[0].getSalarioNeto();
                    if (!"".equals(Empleado[0].getCedula())){
                        P = new ClsImpresora(Empleado[0].getCedula() + Fecha.getTime());
                        P.Imprimir(Empleado[0], AporteSalud, AportePension, Prestamos, AuxTransporte, SalarioNeto, SalarioBasico, SalarioBruto, Bonificaciones, HorasExtD, HorasExtN, Periodo);
                    }else{
                        System.out.println("No hay datos para imprimir...");
                    }                

                }catch(Exception ee) {
                    System.out.println("Error al Calcular una nomina...");
                }

            }
        }else{
            JOptionPane.showMessageDialog(rootPane, "Seleccione un periodo valido");
            return;
        }
    }//GEN-LAST:event_BtnImpirmirActionPerformed

    private void CBoxPeriodoImpItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_CBoxPeriodoImpItemStateChanged
        // TODO add your handling code here:
    }//GEN-LAST:event_CBoxPeriodoImpItemStateChanged

    private void CBoxPeriodoImpActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_CBoxPeriodoImpActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_CBoxPeriodoImpActionPerformed

    private void cargarDatos(String Cedula){      
        ClsCargos[] Cargos = new ClsCargos[1];
        try {            
           Cargos = ClsConexionDatos.buscaCargos(Cedula);
            
            
            
            
        } catch (Exception ee) {
            System.out.println(ee.getStackTrace());
        }

    }

   
private void ExtraerDatos(int Fila){      
        ClsCargos[] Cargos = new ClsCargos[1];
        try {            
           Cargos = ClsConexionDatos.SelectAllCargos(Fila);
           // TxtRutaArchivo.setVisible(false);
            
            
            
        } catch (Exception ee) {
            System.out.println(ee.getStackTrace());
        }

    }
    




    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton BtnGenerartxt;
    private javax.swing.JButton BtnImpirmir;
    private javax.swing.JButton BtnSalir;
    private javax.swing.JComboBox CBoxPeriodoImp;
    private javax.swing.JTextField TxtRutaArchivo;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    // End of variables declaration//GEN-END:variables
}
